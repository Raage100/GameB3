// <auto-generated />
using Game.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game.Infrastructure.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Game.Domain.Entites.Gamee", b =>
                {
                    b.Property<int>("GameeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GameeId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameeId");

                    b.ToTable("Gamees");
                });

            modelBuilder.Entity("Game.Domain.Entites.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlayerId"), 1L, 1);

                    b.Property<int>("GameeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameeId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Game.Domain.Entites.Score", b =>
                {
                    b.Property<int>("ScoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScoreId"), 1L, 1);

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("SportId")
                        .HasColumnType("int");

                    b.HasKey("ScoreId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SportId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("Game.Domain.Entites.Sport", b =>
                {
                    b.Property<int>("SportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SportId"), 1L, 1);

                    b.Property<int>("GameeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportId");

                    b.HasIndex("GameeId");

                    b.ToTable("Sports");
                });

            modelBuilder.Entity("Game.Domain.Entites.Player", b =>
                {
                    b.HasOne("Game.Domain.Entites.Gamee", "Gamee")
                        .WithMany("Players")
                        .HasForeignKey("GameeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gamee");
                });

            modelBuilder.Entity("Game.Domain.Entites.Score", b =>
                {
                    b.HasOne("Game.Domain.Entites.Player", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Game.Domain.Entites.Sport", "Sport")
                        .WithMany("Scores")
                        .HasForeignKey("SportId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Sport");
                });

            modelBuilder.Entity("Game.Domain.Entites.Sport", b =>
                {
                    b.HasOne("Game.Domain.Entites.Gamee", "Gamee")
                        .WithMany("Sports")
                        .HasForeignKey("GameeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Gamee");
                });

            modelBuilder.Entity("Game.Domain.Entites.Gamee", b =>
                {
                    b.Navigation("Players");

                    b.Navigation("Sports");
                });

            modelBuilder.Entity("Game.Domain.Entites.Player", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Game.Domain.Entites.Sport", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
